// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RS.HMI.ClientData.DbContexts;

#nullable disable

namespace RS.HMI.SQLite.Migrations
{
    [DbContext(typeof(HMIClientDataDbContexts))]
    partial class HMIClientDataDbContextsModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("RS.HMI.ClientData.Entities.CommuStation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CommuStation");
                });

            modelBuilder.Entity("RS.HMI.ClientData.Entities.ModbusCommuConfig", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ByteOrder")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CharacterLength")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CommuStationId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DataDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte>("DataGroup")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DataId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DataType")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("DataValue")
                        .HasColumnType("REAL");

                    b.Property<byte?>("DigitalNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FunctionCode")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("IsStringInverse")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("MaxValue")
                        .HasColumnType("REAL");

                    b.Property<double?>("MinValue")
                        .HasColumnType("REAL");

                    b.Property<int>("ReadWritePermission")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SerialPortConfigId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte>("StationNumber")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ModbusCommuConfig");
                });

            modelBuilder.Entity("RS.HMI.ClientData.Entities.SerialPortConfig", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("BaudRate")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CommuStationId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DataBits")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAutoConnect")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Parity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PortName")
                        .HasColumnType("TEXT");

                    b.Property<int>("StopBits")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("SerialPortConfig");
                });
#pragma warning restore 612, 618
        }
    }
}
